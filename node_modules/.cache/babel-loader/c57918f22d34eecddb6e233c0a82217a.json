{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\App final\\\\Concentrate\\\\src\\\\containers\\\\App\\\\game\\\\levelsClassic\\\\levelThree.js\";\nimport React from 'react';\nimport Footer from '../../../../components/footer/footer.js';\nimport Board from '../../../../components/board/board';\nimport buildDeckCards from '../../../../utils/buildDeckCards.js';\nimport checkVictory from '../../../../utils/checkVictory.js';\nimport './assets/levels.css';\n\nconst getInitialState = () => {\n  const deck = buildDeckCards(8);\n  return {\n    deck,\n    selectedCouple: [],\n    isCompared: false\n  };\n};\n\nclass LevelThree extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = getInitialState();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"bodylevels\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, React.createElement(Board, {\n      deck: this.state.deck,\n      selectedCouple: this.state.selectedCouple,\n      selectCard: card => this.selectCard(card),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    }), React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  selectCard(card) {\n    if (this.state.isCompared || this.state.selectedCouple.indexOf(card) > -1 || card.guessed) {\n      return;\n    }\n\n    const selectedCouple = [...this.state.selectedCouple, card];\n    this.setState({\n      selectedCouple\n    });\n\n    if (selectedCouple.length === 2) {\n      this.compareCouple(selectedCouple);\n    }\n  }\n\n  compareCouple(selectedCouple) {\n    this.setState({\n      isCompared: true\n    });\n    setTimeout(() => {\n      const [firstCard, secondCard] = selectedCouple;\n      let deck = this.state.deck;\n\n      if (firstCard.icon === secondCard.icon) {\n        deck = deck.map(card => {\n          if (card.icon !== firstCard.icon) {\n            return card;\n          }\n\n          return { ...card,\n            guessed: true\n          };\n        });\n      }\n\n      if (checkVictory(deck)) {\n        return this.props.history.push('/Victory');\n      }\n\n      ;\n      this.setState({\n        selectedCouple: [],\n        deck,\n        isCompared: false\n      });\n    }, 1000);\n  }\n\n}\n\nexport default LevelThree;","map":{"version":3,"sources":["C:/Users/user/Desktop/App final/Concentrate/src/containers/App/game/levelsClassic/levelThree.js"],"names":["React","Footer","Board","buildDeckCards","checkVictory","getInitialState","deck","selectedCouple","isCompared","LevelThree","Component","constructor","props","state","render","card","selectCard","indexOf","guessed","setState","length","compareCouple","setTimeout","firstCard","secondCard","icon","map","history","push"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,yCAAnB;AACA,OAAOC,KAAP,MAAkB,oCAAlB;AACA,OAAOC,cAAP,MAA2B,qCAA3B;AACA,OAAOC,YAAP,MAAyB,mCAAzB;AACA,OAAO,qBAAP;;AACA,MAAMC,eAAe,GAAG,MAAM;AACtB,QAAMC,IAAI,GAAGH,cAAc,CAAC,CAAD,CAA3B;AACA,SAAM;AACFG,IAAAA,IADE;AAEFC,IAAAA,cAAc,EAAE,EAFd;AAGFC,IAAAA,UAAU,EAAE;AAHV,GAAN;AAKH,CAPL;;AASA,MAAMC,UAAN,SAAyBT,KAAK,CAACU,SAA/B,CAAwC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAaR,eAAe,EAA5B;AACH;;AACDS,EAAAA,MAAM,GAAE;AACJ,WACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AACA,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWP,IADjB;AAEA,MAAA,cAAc,EAAE,KAAKO,KAAL,CAAWN,cAF3B;AAGA,MAAA,UAAU,EAAGQ,IAAD,IAAU,KAAKC,UAAL,CAAgBD,IAAhB,CAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAMI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADJ;AAUH;;AAEDC,EAAAA,UAAU,CAACD,IAAD,EAAM;AACZ,QACI,KAAKF,KAAL,CAAWL,UAAX,IACA,KAAKK,KAAL,CAAWN,cAAX,CAA0BU,OAA1B,CAAkCF,IAAlC,IAA0C,CAAC,CAD3C,IAEAA,IAAI,CAACG,OAHT,EAIC;AACG;AACH;;AAED,UAAMX,cAAc,GAAG,CAAC,GAAG,KAAKM,KAAL,CAAWN,cAAf,EAA+BQ,IAA/B,CAAvB;AACA,SAAKI,QAAL,CAAc;AACVZ,MAAAA;AADU,KAAd;;AAIA,QAAGA,cAAc,CAACa,MAAf,KAA0B,CAA7B,EAA+B;AAC3B,WAAKC,aAAL,CAAmBd,cAAnB;AACH;AAEJ;;AAEDc,EAAAA,aAAa,CAACd,cAAD,EAAgB;AACzB,SAAKY,QAAL,CAAc;AACVX,MAAAA,UAAU,EAAC;AADD,KAAd;AAKAc,IAAAA,UAAU,CAAC,MAAM;AACb,YAAM,CAACC,SAAD,EAAYC,UAAZ,IAA0BjB,cAAhC;AACA,UAAID,IAAI,GAAG,KAAKO,KAAL,CAAWP,IAAtB;;AAEA,UAAGiB,SAAS,CAACE,IAAV,KAAmBD,UAAU,CAACC,IAAjC,EAAsC;AAClCnB,QAAAA,IAAI,GAAGA,IAAI,CAACoB,GAAL,CAAUX,IAAD,IAAU;AACtB,cAAGA,IAAI,CAACU,IAAL,KAAcF,SAAS,CAACE,IAA3B,EAAgC;AAC5B,mBAAOV,IAAP;AACH;;AACD,iBAAO,EAAC,GAAGA,IAAJ;AAAUG,YAAAA,OAAO,EAAE;AAAnB,WAAP;AACH,SALM,CAAP;AAMH;;AACD,UAAGd,YAAY,CAACE,IAAD,CAAf,EAAsB;AAClB,eAAO,KAAKM,KAAL,CAAWe,OAAX,CAAmBC,IAAnB,CAAwB,UAAxB,CAAP;AACH;;AAAA;AACD,WAAKT,QAAL,CAAc;AACVZ,QAAAA,cAAc,EAAE,EADN;AAEVD,QAAAA,IAFU;AAGVE,QAAAA,UAAU,EAAE;AAHF,OAAd;AAMH,KArBS,EAqBP,IArBO,CAAV;AAuBH;;AAnEmC;;AAsExC,eAAeC,UAAf","sourcesContent":["import React from 'react';\r\nimport Footer from '../../../../components/footer/footer.js';\r\nimport Board from '../../../../components/board/board';\r\nimport buildDeckCards from '../../../../utils/buildDeckCards.js'\r\nimport checkVictory from '../../../../utils/checkVictory.js'\r\nimport './assets/levels.css'\r\nconst getInitialState = () => {\r\n        const deck = buildDeckCards(8);\r\n        return{\r\n            deck,\r\n            selectedCouple: [],\r\n            isCompared: false\r\n        };\r\n    }\r\n\r\nclass LevelThree extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = getInitialState();\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"bodylevels\">\r\n                <Board \r\n                deck={this.state.deck} \r\n                selectedCouple={this.state.selectedCouple}\r\n                selectCard={(card) => this.selectCard(card)}\r\n                />\r\n                <Footer/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    selectCard(card){\r\n        if(\r\n            this.state.isCompared || \r\n            this.state.selectedCouple.indexOf(card) > -1 ||\r\n            card.guessed\r\n        ){\r\n            return;\r\n        }\r\n\r\n        const selectedCouple = [...this.state.selectedCouple, card];\r\n        this.setState({\r\n            selectedCouple\r\n        });\r\n\r\n        if(selectedCouple.length === 2){\r\n            this.compareCouple(selectedCouple);\r\n        }\r\n\r\n    }\r\n\r\n    compareCouple(selectedCouple){\r\n        this.setState({\r\n            isCompared:true\r\n\r\n        });\r\n\r\n        setTimeout(() => {\r\n            const [firstCard, secondCard] = selectedCouple;\r\n            let deck = this.state.deck;\r\n\r\n            if(firstCard.icon === secondCard.icon){\r\n                deck = deck.map((card) => {\r\n                    if(card.icon !== firstCard.icon){\r\n                        return card;\r\n                    }\r\n                    return {...card, guessed: true}                    \r\n                })\r\n            }\r\n            if(checkVictory(deck)){\r\n                return this.props.history.push('/Victory')\r\n            };\r\n            this.setState({\r\n                selectedCouple: [],\r\n                deck,\r\n                isCompared: false\r\n\r\n            })\r\n        }, 1000)\r\n\r\n    }\r\n\r\n}\r\nexport default LevelThree;\r\n"]},"metadata":{},"sourceType":"module"}